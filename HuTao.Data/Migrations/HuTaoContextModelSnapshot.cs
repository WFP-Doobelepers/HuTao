// <auto-generated />
using System;
using HuTao.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HuTao.Data.Migrations
{
    [DbContext(typeof(HuTaoContext))]
    partial class HuTaoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HardMuteRoleEntity", b =>
                {
                    b.Property<Guid>("MutesId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("RolesRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("MutesId", "RolesRoleId");

                    b.HasIndex("RolesRoleId");

                    b.ToTable("HardMuteRoleEntity");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.AuthorizationGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Access")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("GuildEntityId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("JudgeType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("LinkedCommandId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModerationCategoryId")
                        .HasColumnType("uuid");

                    b.Property<int>("Scope")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("GuildEntityId");

                    b.HasIndex("LinkedCommandId");

                    b.HasIndex("ModerationCategoryId");

                    b.ToTable("AuthorizationGroup");
                });

            modelBuilder.Entity("HuTao.Data.Models.Criteria.Criterion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuthorizationGroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CensorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("LoggingRulesId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModerationCategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModerationRulesId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationGroupId");

                    b.HasIndex("CensorId");

                    b.HasIndex("LoggingRulesId");

                    b.HasIndex("ModerationCategoryId");

                    b.HasIndex("ModerationRulesId");

                    b.ToTable("Criterion");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Criterion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.EnumChannel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IntType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("EnumChannels");

                    b.HasDiscriminator<string>("Discriminator").HasValue("EnumChannel");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("GenshinRulesId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModerationRulesId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GenshinRulesId");

                    b.HasIndex("ModerationRulesId");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildUserEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset?>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id", "GuildId");

                    b.HasIndex("GuildId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Attachment", b =>
                {
                    b.Property<Guid>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Ephemeral")
                        .HasColumnType("boolean");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("MessageLogId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MessageTemplateId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProxyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("AttachmentId");

                    b.HasIndex("MessageLogId");

                    b.HasIndex("MessageTemplateId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.ActionRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MessageLogId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MessageTemplateId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MessageLogId");

                    b.HasIndex("MessageTemplateId");

                    b.ToTable("ActionRow");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.Component", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActionRowId")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ActionRowId");

                    b.ToTable("Component");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Component");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.MenuOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Emote")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("SelectMenuId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("SelectMenuId");

                    b.ToTable("MenuOption");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("IconUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProxyIconUrl")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Embed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<long?>("Color")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("FooterId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MessageLogId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MessageTemplateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ThumbnailId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("FooterId");

                    b.HasIndex("ImageId");

                    b.HasIndex("MessageLogId");

                    b.HasIndex("MessageTemplateId");

                    b.HasIndex("ThumbnailId");

                    b.HasIndex("VideoId");

                    b.ToTable("Embed");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EmbedId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Inline")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmbedId");

                    b.ToTable("Field");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Footer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("IconUrl")
                        .HasColumnType("text");

                    b.Property<string>("ProxyUrl")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Footer");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("ProxyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Thumbnail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("ProxyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Thumbnail");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.LinkedButton", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ButtonId")
                        .HasColumnType("uuid");

                    b.Property<bool>("DmUser")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ephemeral")
                        .HasColumnType("boolean");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ButtonId")
                        .IsUnique();

                    b.HasIndex("GuildId");

                    b.HasIndex("MessageId");

                    b.ToTable("LinkedButton");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.LinkedCommand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan?>("Cooldown")
                        .HasColumnType("interval");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Ephemeral")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("GuildEntityId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Silent")
                        .HasColumnType("boolean");

                    b.Property<int>("UserOptions")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildEntityId");

                    b.HasIndex("MessageId");

                    b.ToTable("LinkedCommand");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.MessageTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowMentions")
                        .HasColumnType("boolean");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<bool>("IsLive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("ReplaceTimestamps")
                        .HasColumnType("boolean");

                    b.Property<bool>("SuppressEmbeds")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("MessageTemplate");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.RoleTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Behavior")
                        .HasColumnType("integer");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("LinkedButtonId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LinkedCommandId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RoleActionId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("RoleReprimandId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LinkedButtonId");

                    b.HasIndex("LinkedCommandId");

                    b.HasIndex("RoleActionId");

                    b.HasIndex("RoleReprimandId");

                    b.ToTable("RoleTemplate");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.StickyMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long?>("CountDelay")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("GuildEntityId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan?>("TimeDelay")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("GuildEntityId");

                    b.HasIndex("TemplateId");

                    b.ToTable("StickyMessage");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Reaction.ReactionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReactionEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ReactionEntity");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.RoleEntity", b =>
                {
                    b.Property<decimal>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.TemporaryRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ExpireAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("GuildEntityId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("interval");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("GuildEntityId");

                    b.ToTable("TemporaryRole");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.TemporaryRoleMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ExpireAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("GuildEntityId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("interval");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("GuildEntityId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("TemporaryRoleMember");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.DeleteLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("GuildEntityId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("LogDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("GuildEntityId");

                    b.ToTable("DeleteLog");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DeleteLog");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.LoggingRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("LoggingRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.MessageLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("EditedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("LogDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("MentionedEveryone")
                        .HasColumnType("boolean");

                    b.Property<int>("MentionedRolesCount")
                        .HasColumnType("integer");

                    b.Property<int>("MentionedUsersCount")
                        .HasColumnType("integer");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ReferencedMessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedLogId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UpdatedLogId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("MessageLog");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.ReactionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid>("EmoteId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("LogDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("EmoteId");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("ReactionLog");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("OriginalString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Link");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.ModerationExclusion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ConfigurationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ModerationRulesId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("ModerationRulesId");

                    b.ToTable("ModerationExclusion");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ModerationExclusion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.ModerationTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("GuildEntityId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("Scope")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GuildEntityId");

                    b.ToTable("ModerationTemplate");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReprimandAction");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ReprimandAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.ModerationAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("ModerationAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Reprimand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("ModifiedActionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TriggerId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GuildId");

                    b.HasIndex("ModifiedActionId");

                    b.HasIndex("TriggerId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("Reprimand");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Reprimand");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Triggers.Trigger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Mode")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ModerationRulesId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ModerationRulesId");

                    b.ToTable("Trigger");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Trigger");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Logging.ModerationLogConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AppealMessage")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LogReprimandStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LogReprimands")
                        .HasColumnType("integer");

                    b.Property<int?>("Options")
                        .HasColumnType("integer");

                    b.Property<int?>("ShowAppealOnReprimands")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ModerationLogConfig");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ModerationLogConfig");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Logging.ModerationLoggingRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CommandLogId")
                        .HasColumnType("uuid");

                    b.Property<int?>("HistoryReprimands")
                        .HasColumnType("integer");

                    b.Property<bool>("IgnoreDuplicates")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModeratorLogId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PublicLogId")
                        .HasColumnType("uuid");

                    b.Property<int?>("SilentReprimands")
                        .HasColumnType("integer");

                    b.Property<int?>("SummaryReprimands")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserLogId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommandLogId");

                    b.HasIndex("ModeratorLogId");

                    b.HasIndex("PublicLogId");

                    b.HasIndex("UserLogId");

                    b.ToTable("ModerationLoggingRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.ModerationCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan?>("AutoReprimandCooldown")
                        .HasColumnType("interval");

                    b.Property<bool>("CensorNicknames")
                        .HasColumnType("boolean");

                    b.Property<bool>("CensorUsernames")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan?>("CensoredExpiryLength")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("FilteredExpiryLength")
                        .HasColumnType("interval");

                    b.Property<decimal?>("GuildEntityId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("HardMuteRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("LoggingId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("MuteRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameReplacement")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("NoticeExpiryLength")
                        .HasColumnType("interval");

                    b.Property<bool>("ReplaceMutes")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan?>("WarningExpiryLength")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("GuildEntityId");

                    b.HasIndex("LoggingId");

                    b.ToTable("ModerationCategory");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.ModerationRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan?>("AutoReprimandCooldown")
                        .HasColumnType("interval");

                    b.Property<bool>("CensorNicknames")
                        .HasColumnType("boolean");

                    b.Property<bool>("CensorUsernames")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan?>("CensoredExpiryLength")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("FilteredExpiryLength")
                        .HasColumnType("interval");

                    b.Property<decimal?>("HardMuteRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("LoggingId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("MuteRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("NameReplacement")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("NoticeExpiryLength")
                        .HasColumnType("interval");

                    b.Property<bool>("ReplaceMutes")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan?>("WarningExpiryLength")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("LoggingId");

                    b.ToTable("ModerationRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.ModerationVariable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModerationRulesId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModerationRulesId");

                    b.ToTable("ModerationVariable");
                });

            modelBuilder.Entity("HuTao.Data.Models.TimeTracking.GenshinTimeTrackingRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AmericaChannelId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AsiaChannelId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EuropeChannelId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SARChannelId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ServerStatusId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AmericaChannelId");

                    b.HasIndex("AsiaChannelId");

                    b.HasIndex("EuropeChannelId");

                    b.HasIndex("SARChannelId");

                    b.HasIndex("ServerStatusId");

                    b.ToTable("GenshinTimeTrackingRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.TimeTracking.TimeTracking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("TimeTrackingRules");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TimeTracking");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("TextChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("VoiceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("VoiceChatRulesId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("VoiceChatRulesId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("VoiceChatLink");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("DeletionDelay")
                        .HasColumnType("interval");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("HubVoiceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("PurgeEmpty")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowJoinLeave")
                        .HasColumnType("boolean");

                    b.Property<decimal>("VoiceChannelCategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("VoiceChatCategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("VoiceChatRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Criteria.ChannelCriterion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Criteria.Criterion");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsCategory")
                        .HasColumnType("boolean");

                    b.HasDiscriminator().HasValue("ChannelCriterion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Criteria.PermissionCriterion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Criteria.Criterion");

                    b.Property<int>("Permission")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("PermissionCriterion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Criteria.RoleCriterion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Criteria.Criterion");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasDiscriminator().HasValue("RoleCriterion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Criteria.UserCriterion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Criteria.Criterion");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasDiscriminator().HasValue("UserCriterion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.EnumChannel<HuTao.Data.Models.Logging.LogType>", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Discord.EnumChannel");

                    b.Property<Guid?>("LoggingRulesId")
                        .HasColumnType("uuid");

                    b.HasIndex("LoggingRulesId");

                    b.HasDiscriminator().HasValue("EnumChannel<LogType>");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.Button", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Discord.Message.Components.Component");

                    b.Property<string>("Emote")
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int>("Style")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Button");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.SelectMenu", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Discord.Message.Components.Component");

                    b.Property<int>("MaxValues")
                        .HasColumnType("integer");

                    b.Property<int>("MinValues")
                        .HasColumnType("integer");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasDiscriminator().HasValue("SelectMenu");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Reaction.EmojiEntity", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Discord.Reaction.ReactionEntity");

                    b.HasDiscriminator().HasValue("EmojiEntity");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Reaction.EmoteEntity", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Discord.Reaction.ReactionEntity");

                    b.Property<decimal>("EmoteId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsAnimated")
                        .HasColumnType("boolean");

                    b.HasIndex("EmoteId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("EmoteEntity");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.MessageDeleteLog", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Logging.DeleteLog");

                    b.Property<decimal>("ChannelId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("ChannelId");

                    b.Property<Guid?>("FilteredId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("GuildId");

                    b.Property<decimal>("MessageId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("MessageId");

                    b.Property<Guid?>("MessagesDeleteLogId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("UserId");

                    b.HasIndex("FilteredId");

                    b.HasIndex("MessagesDeleteLogId");

                    b.HasDiscriminator().HasValue("MessageDeleteLog");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.MessagesDeleteLog", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Logging.DeleteLog");

                    b.Property<decimal>("ChannelId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("ChannelId");

                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("GuildId");

                    b.HasDiscriminator().HasValue("MessagesDeleteLog");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.ReactionDeleteLog", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Logging.DeleteLog");

                    b.Property<decimal>("ChannelId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("ChannelId");

                    b.Property<Guid>("EmoteId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("GuildId");

                    b.Property<decimal>("MessageId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("MessageId");

                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("UserId");

                    b.HasIndex("EmoteId");

                    b.HasDiscriminator().HasValue("ReactionDeleteLog");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Triggers.Trigger");

                    b.Property<TimeSpan?>("Cooldown")
                        .HasColumnType("interval");

                    b.Property<bool>("DeleteMessages")
                        .HasColumnType("boolean");

                    b.Property<bool>("Global")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("interval");

                    b.Property<int>("MinimumLength")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<Guid?>("ReprimandId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("uuid")
                        .HasColumnName("ReprimandId");

                    b.HasIndex("ReprimandId");

                    b.HasDiscriminator().HasValue("AutoConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.CriterionExclusion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Exclusions.ModerationExclusion");

                    b.Property<Guid>("CriterionId")
                        .HasColumnType("uuid");

                    b.HasIndex("CriterionId");

                    b.HasDiscriminator().HasValue("CriterionExclusion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.EmojiExclusion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Exclusions.ModerationExclusion");

                    b.Property<Guid>("EmojiId")
                        .HasColumnType("uuid");

                    b.HasIndex("EmojiId");

                    b.HasDiscriminator().HasValue("EmojiExclusion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.InviteExclusion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Exclusions.ModerationExclusion");

                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("GuildId");

                    b.HasIndex("GuildId");

                    b.HasDiscriminator().HasValue("InviteExclusion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.LinkExclusion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Exclusions.ModerationExclusion");

                    b.Property<Guid>("LinkId")
                        .HasColumnType("uuid");

                    b.HasIndex("LinkId");

                    b.HasDiscriminator().HasValue("LinkExclusion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.RoleMentionExclusion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Exclusions.ModerationExclusion");

                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("GuildId");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasIndex("RoleId");

                    b.HasDiscriminator().HasValue("RoleMentionExclusion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.UserMentionExclusion", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Exclusions.ModerationExclusion");

                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("GuildId");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasIndex("UserId", "GuildId");

                    b.HasDiscriminator().HasValue("UserMentionExclusion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.BanAction", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction");

                    b.Property<long>("DeleteDays")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan?>("Length")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("interval")
                        .HasColumnName("Length");

                    b.HasDiscriminator().HasValue("BanAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.KickAction", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction");

                    b.HasDiscriminator().HasValue("KickAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.MuteAction", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction");

                    b.Property<TimeSpan?>("Length")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("interval")
                        .HasColumnName("Length");

                    b.HasDiscriminator().HasValue("MuteAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.NoteAction", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction");

                    b.HasDiscriminator().HasValue("NoteAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.NoticeAction", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction");

                    b.HasDiscriminator().HasValue("NoticeAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.RoleAction", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction");

                    b.Property<TimeSpan?>("Length")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("interval")
                        .HasColumnName("Length");

                    b.HasDiscriminator().HasValue("RoleAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.WarningAction", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.HasDiscriminator().HasValue("WarningAction");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Censors.Censor", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Triggers.Trigger");

                    b.Property<int>("Options")
                        .HasColumnType("integer");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ReprimandId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("uuid")
                        .HasColumnName("ReprimandId");

                    b.Property<bool>("Silent")
                        .HasColumnType("boolean");

                    b.HasIndex("ReprimandId");

                    b.HasDiscriminator().HasValue("Censor");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.ExpirableReprimand", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.Reprimand");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ExpireAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("interval");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasDiscriminator().HasValue("ExpirableReprimand");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Kick", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.Reprimand");

                    b.HasDiscriminator().HasValue("Kick");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Note", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.Reprimand");

                    b.HasDiscriminator().HasValue("Note");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Triggers.ReprimandTrigger", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Triggers.Trigger");

                    b.Property<Guid?>("ReprimandId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("uuid")
                        .HasColumnName("ReprimandId");

                    b.Property<int>("Source")
                        .HasColumnType("integer");

                    b.HasIndex("ReprimandId");

                    b.HasDiscriminator().HasValue("ReprimandTrigger");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Logging.ModerationLogChannelConfig", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Logging.ModerationLogConfig");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.HasDiscriminator().HasValue("ModerationLogChannelConfig");
                });

            modelBuilder.Entity("HuTao.Data.Models.TimeTracking.ChannelTimeTracking", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.TimeTracking.TimeTracking");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("ChannelTimeTracking_ChannelId");

                    b.HasDiscriminator().HasValue("ChannelTimeTracking");
                });

            modelBuilder.Entity("HuTao.Data.Models.TimeTracking.MessageTimeTracking", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.TimeTracking.TimeTracking");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.HasDiscriminator().HasValue("MessageTimeTracking");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.AttachmentConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.HasDiscriminator().HasValue("AttachmentConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.DuplicateConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.Property<double>("Percentage")
                        .HasColumnType("double precision");

                    b.Property<int>("Tolerance")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("DuplicateConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.EmojiConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.HasDiscriminator().HasValue("EmojiConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.InviteConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.HasDiscriminator().HasValue("InviteConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.LinkConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.HasDiscriminator().HasValue("LinkConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.MentionConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.Property<bool>("CountDuplicate")
                        .HasColumnType("boolean");

                    b.Property<bool>("CountInvalid")
                        .HasColumnType("boolean");

                    b.Property<bool>("CountRoleMembers")
                        .HasColumnType("boolean");

                    b.HasDiscriminator().HasValue("MentionConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.MessageConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.HasDiscriminator().HasValue("MessageConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.NewLineConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.Property<bool>("BlankOnly")
                        .HasColumnType("boolean");

                    b.HasDiscriminator().HasValue("NewLineConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.ReplyConfiguration", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration");

                    b.HasDiscriminator().HasValue("ReplyConfiguration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Ban", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.ExpirableReprimand");

                    b.Property<long>("DeleteDays")
                        .HasColumnType("bigint");

                    b.HasDiscriminator().HasValue("Ban");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Censored", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.ExpirableReprimand");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Censored");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Filtered", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.ExpirableReprimand");

                    b.HasDiscriminator().HasValue("Filtered");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Mute", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.ExpirableReprimand");

                    b.HasDiscriminator().HasValue("Mute");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Notice", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.ExpirableReprimand");

                    b.HasDiscriminator().HasValue("Notice");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.RoleReprimand", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.ExpirableReprimand");

                    b.HasDiscriminator().HasValue("RoleReprimand");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Warning", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.ExpirableReprimand");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.HasDiscriminator().HasValue("Warning");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.HardMute", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Moderation.Infractions.Reprimands.Mute");

                    b.HasDiscriminator().HasValue("HardMute");
                });

            modelBuilder.Entity("HardMuteRoleEntity", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Reprimands.HardMute", null)
                        .WithMany()
                        .HasForeignKey("MutesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RolesRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.AuthorizationGroup", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.ModerationAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", null)
                        .WithMany("AuthorizationGroups")
                        .HasForeignKey("GuildEntityId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.LinkedCommand", null)
                        .WithMany("Authorization")
                        .HasForeignKey("LinkedCommandId");

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationCategory", null)
                        .WithMany("Authorization")
                        .HasForeignKey("ModerationCategoryId");

                    b.Navigation("Action");
                });

            modelBuilder.Entity("HuTao.Data.Models.Criteria.Criterion", b =>
                {
                    b.HasOne("HuTao.Data.Models.Authorization.AuthorizationGroup", null)
                        .WithMany("Collection")
                        .HasForeignKey("AuthorizationGroupId");

                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Censors.Censor", null)
                        .WithMany("Exclusions")
                        .HasForeignKey("CensorId");

                    b.HasOne("HuTao.Data.Models.Logging.LoggingRules", null)
                        .WithMany("LoggingExclusions")
                        .HasForeignKey("LoggingRulesId");

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationCategory", null)
                        .WithMany("CensorExclusions")
                        .HasForeignKey("ModerationCategoryId");

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationRules", null)
                        .WithMany("CensorExclusions")
                        .HasForeignKey("ModerationRulesId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildEntity", b =>
                {
                    b.HasOne("HuTao.Data.Models.TimeTracking.GenshinTimeTrackingRules", "GenshinRules")
                        .WithMany()
                        .HasForeignKey("GenshinRulesId");

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationRules", "ModerationRules")
                        .WithMany()
                        .HasForeignKey("ModerationRulesId");

                    b.Navigation("GenshinRules");

                    b.Navigation("ModerationRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildUserEntity", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Attachment", b =>
                {
                    b.HasOne("HuTao.Data.Models.Logging.MessageLog", null)
                        .WithMany("Attachments")
                        .HasForeignKey("MessageLogId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.MessageTemplate", null)
                        .WithMany("Attachments")
                        .HasForeignKey("MessageTemplateId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.ActionRow", b =>
                {
                    b.HasOne("HuTao.Data.Models.Logging.MessageLog", null)
                        .WithMany("Components")
                        .HasForeignKey("MessageLogId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.MessageTemplate", null)
                        .WithMany("Components")
                        .HasForeignKey("MessageTemplateId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.Component", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Message.Components.ActionRow", null)
                        .WithMany("Components")
                        .HasForeignKey("ActionRowId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.MenuOption", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Message.Components.SelectMenu", null)
                        .WithMany("Options")
                        .HasForeignKey("SelectMenuId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Embed", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Message.Embeds.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Embeds.Footer", "Footer")
                        .WithMany()
                        .HasForeignKey("FooterId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Embeds.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("HuTao.Data.Models.Logging.MessageLog", null)
                        .WithMany("Embeds")
                        .HasForeignKey("MessageLogId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.MessageTemplate", null)
                        .WithMany("Embeds")
                        .HasForeignKey("MessageTemplateId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Embeds.Thumbnail", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Embeds.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId");

                    b.Navigation("Author");

                    b.Navigation("Footer");

                    b.Navigation("Image");

                    b.Navigation("Thumbnail");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Field", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Message.Embeds.Embed", null)
                        .WithMany("Fields")
                        .HasForeignKey("EmbedId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.LinkedButton", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Message.Components.Button", "Button")
                        .WithOne("Link")
                        .HasForeignKey("HuTao.Data.Models.Discord.Message.Linking.LinkedButton", "ButtonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany("LinkedButtons")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.MessageTemplate", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.Navigation("Button");

                    b.Navigation("Guild");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.LinkedCommand", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", null)
                        .WithMany("LinkedCommands")
                        .HasForeignKey("GuildEntityId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.MessageTemplate", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.RoleTemplate", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.LinkedButton", null)
                        .WithMany("Roles")
                        .HasForeignKey("LinkedButtonId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.LinkedCommand", null)
                        .WithMany("Roles")
                        .HasForeignKey("LinkedCommandId");

                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Actions.RoleAction", null)
                        .WithMany("Roles")
                        .HasForeignKey("RoleActionId");

                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Reprimands.RoleReprimand", null)
                        .WithMany("Roles")
                        .HasForeignKey("RoleReprimandId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.StickyMessage", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", null)
                        .WithMany("StickyMessages")
                        .HasForeignKey("GuildEntityId");

                    b.HasOne("HuTao.Data.Models.Discord.Message.Linking.MessageTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.TemporaryRole", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.ModerationAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", null)
                        .WithMany("TemporaryRoles")
                        .HasForeignKey("GuildEntityId");

                    b.Navigation("Action");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.TemporaryRoleMember", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.ModerationAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", null)
                        .WithMany("TemporaryRoleMembers")
                        .HasForeignKey("GuildEntityId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.DeleteLog", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.ModerationAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", null)
                        .WithMany("DeleteLogs")
                        .HasForeignKey("GuildEntityId");

                    b.Navigation("Action");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.LoggingRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithOne("LoggingRules")
                        .HasForeignKey("HuTao.Data.Models.Logging.LoggingRules", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.MessageLog", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany("MessageLogs")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Logging.MessageLog", "UpdatedLog")
                        .WithMany()
                        .HasForeignKey("UpdatedLogId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("UpdatedLog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.ReactionLog", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Reaction.ReactionEntity", "Emote")
                        .WithMany()
                        .HasForeignKey("EmoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany("ReactionLogs")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emote");

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.ModerationExclusion", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration", "Configuration")
                        .WithMany("Exclusions")
                        .HasForeignKey("ConfigurationId");

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationRules", null)
                        .WithMany("Exclusions")
                        .HasForeignKey("ModerationRulesId");

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.ModerationTemplate", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", null)
                        .WithMany("ModerationTemplates")
                        .HasForeignKey("GuildEntityId");

                    b.Navigation("Action");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.ModerationAction", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "Moderator")
                        .WithMany()
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Moderator");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Reprimand", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.ModerationAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany("ReprimandHistory")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.ModerationAction", "ModifiedAction")
                        .WithMany()
                        .HasForeignKey("ModifiedActionId");

                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Triggers.Trigger", "Trigger")
                        .WithMany()
                        .HasForeignKey("TriggerId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Category");

                    b.Navigation("Guild");

                    b.Navigation("ModifiedAction");

                    b.Navigation("Trigger");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Triggers.Trigger", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.ModerationAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("HuTao.Data.Models.Moderation.ModerationRules", null)
                        .WithMany("Triggers")
                        .HasForeignKey("ModerationRulesId");

                    b.Navigation("Action");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Logging.ModerationLoggingRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Logging.ModerationLogConfig", "CommandLog")
                        .WithMany()
                        .HasForeignKey("CommandLogId");

                    b.HasOne("HuTao.Data.Models.Moderation.Logging.ModerationLogChannelConfig", "ModeratorLog")
                        .WithMany()
                        .HasForeignKey("ModeratorLogId");

                    b.HasOne("HuTao.Data.Models.Moderation.Logging.ModerationLogChannelConfig", "PublicLog")
                        .WithMany()
                        .HasForeignKey("PublicLogId");

                    b.HasOne("HuTao.Data.Models.Moderation.Logging.ModerationLogConfig", "UserLog")
                        .WithMany()
                        .HasForeignKey("UserLogId");

                    b.Navigation("CommandLog");

                    b.Navigation("ModeratorLog");

                    b.Navigation("PublicLog");

                    b.Navigation("UserLog");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.ModerationCategory", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", null)
                        .WithMany("ModerationCategories")
                        .HasForeignKey("GuildEntityId");

                    b.HasOne("HuTao.Data.Models.Moderation.Logging.ModerationLoggingRules", "Logging")
                        .WithMany()
                        .HasForeignKey("LoggingId");

                    b.Navigation("Logging");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.ModerationRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Logging.ModerationLoggingRules", "Logging")
                        .WithMany()
                        .HasForeignKey("LoggingId");

                    b.Navigation("Logging");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.ModerationVariable", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.ModerationRules", null)
                        .WithMany("Variables")
                        .HasForeignKey("ModerationRulesId");
                });

            modelBuilder.Entity("HuTao.Data.Models.TimeTracking.GenshinTimeTrackingRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.TimeTracking.ChannelTimeTracking", "AmericaChannel")
                        .WithMany()
                        .HasForeignKey("AmericaChannelId");

                    b.HasOne("HuTao.Data.Models.TimeTracking.ChannelTimeTracking", "AsiaChannel")
                        .WithMany()
                        .HasForeignKey("AsiaChannelId");

                    b.HasOne("HuTao.Data.Models.TimeTracking.ChannelTimeTracking", "EuropeChannel")
                        .WithMany()
                        .HasForeignKey("EuropeChannelId");

                    b.HasOne("HuTao.Data.Models.TimeTracking.ChannelTimeTracking", "SARChannel")
                        .WithMany()
                        .HasForeignKey("SARChannelId");

                    b.HasOne("HuTao.Data.Models.TimeTracking.MessageTimeTracking", "ServerStatus")
                        .WithMany()
                        .HasForeignKey("ServerStatusId");

                    b.Navigation("AmericaChannel");

                    b.Navigation("AsiaChannel");

                    b.Navigation("EuropeChannel");

                    b.Navigation("SARChannel");

                    b.Navigation("ServerStatus");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatLink", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.VoiceChat.VoiceChatRules", null)
                        .WithMany("VoiceChats")
                        .HasForeignKey("VoiceChatRulesId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "Owner")
                        .WithMany()
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithOne("VoiceChatRules")
                        .HasForeignKey("HuTao.Data.Models.VoiceChat.VoiceChatRules", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.EnumChannel<HuTao.Data.Models.Logging.LogType>", b =>
                {
                    b.HasOne("HuTao.Data.Models.Logging.LoggingRules", null)
                        .WithMany("LoggingChannels")
                        .HasForeignKey("LoggingRulesId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.MessageDeleteLog", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Reprimands.Filtered", null)
                        .WithMany("Messages")
                        .HasForeignKey("FilteredId");

                    b.HasOne("HuTao.Data.Models.Logging.MessagesDeleteLog", null)
                        .WithMany("Messages")
                        .HasForeignKey("MessagesDeleteLogId");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.ReactionDeleteLog", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Reaction.ReactionEntity", "Emote")
                        .WithMany()
                        .HasForeignKey("EmoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emote");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction", "Reprimand")
                        .WithMany()
                        .HasForeignKey("ReprimandId");

                    b.Navigation("Reprimand");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.CriterionExclusion", b =>
                {
                    b.HasOne("HuTao.Data.Models.Criteria.Criterion", "Criterion")
                        .WithMany()
                        .HasForeignKey("CriterionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criterion");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.EmojiExclusion", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.Reaction.ReactionEntity", "Emoji")
                        .WithMany()
                        .HasForeignKey("EmojiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emoji");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.InviteExclusion", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.LinkExclusion", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Auto.Configurations.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.RoleMentionExclusion", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Exclusions.UserMentionExclusion", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Censors.Censor", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction", "Reprimand")
                        .WithMany()
                        .HasForeignKey("ReprimandId");

                    b.Navigation("Reprimand");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Triggers.ReprimandTrigger", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.Infractions.Actions.ReprimandAction", "Reprimand")
                        .WithMany()
                        .HasForeignKey("ReprimandId");

                    b.Navigation("Reprimand");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.AuthorizationGroup", b =>
                {
                    b.Navigation("Collection");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildEntity", b =>
                {
                    b.Navigation("AuthorizationGroups");

                    b.Navigation("DeleteLogs");

                    b.Navigation("LinkedButtons");

                    b.Navigation("LinkedCommands");

                    b.Navigation("LoggingRules");

                    b.Navigation("MessageLogs");

                    b.Navigation("ModerationCategories");

                    b.Navigation("ModerationTemplates");

                    b.Navigation("ReactionLogs");

                    b.Navigation("ReprimandHistory");

                    b.Navigation("StickyMessages");

                    b.Navigation("TemporaryRoleMembers");

                    b.Navigation("TemporaryRoles");

                    b.Navigation("VoiceChatRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.ActionRow", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Embeds.Embed", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.LinkedButton", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.LinkedCommand", b =>
                {
                    b.Navigation("Authorization");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Linking.MessageTemplate", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Components");

                    b.Navigation("Embeds");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.LoggingRules", b =>
                {
                    b.Navigation("LoggingChannels");

                    b.Navigation("LoggingExclusions");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.MessageLog", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Components");

                    b.Navigation("Embeds");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.ModerationCategory", b =>
                {
                    b.Navigation("Authorization");

                    b.Navigation("CensorExclusions");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.ModerationRules", b =>
                {
                    b.Navigation("CensorExclusions");

                    b.Navigation("Exclusions");

                    b.Navigation("Triggers");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatRules", b =>
                {
                    b.Navigation("VoiceChats");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.Button", b =>
                {
                    b.Navigation("Link");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.Message.Components.SelectMenu", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.MessagesDeleteLog", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Auto.Configurations.AutoConfiguration", b =>
                {
                    b.Navigation("Exclusions");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Actions.RoleAction", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Censors.Censor", b =>
                {
                    b.Navigation("Exclusions");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.Filtered", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Infractions.Reprimands.RoleReprimand", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
