// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using HuTao.Data;

namespace HuTao.Data.Migrations
{
    [DbContext(typeof(HuTaoContext))]
    [Migration("20210702030715_AuthorizationRuleAbstraction")]
    partial class AuthorizationRuleAbstraction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HuTao.Data.Models.Authorization.AuthorizationRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AddedById")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid>("AuthorizationRulesId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Scope")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("AddedById", "GuildId");

                    b.ToTable("AuthorizationRule");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AuthorizationRule");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.AuthorizationRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("AuthorizationRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("MuteRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildUserEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiscriminatorValue")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarningCount")
                        .HasColumnType("integer");

                    b.HasKey("Id", "GuildId");

                    b.HasIndex("GuildId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.LoggingRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ModerationChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("LoggingRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.AntiSpamRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan?>("DuplicateMessageTime")
                        .HasColumnType("interval");

                    b.Property<int?>("DuplicateTolerance")
                        .HasColumnType("integer");

                    b.Property<long?>("EmojiLimit")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long?>("MessageLimit")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan?>("MessageSpamTime")
                        .HasColumnType("interval");

                    b.Property<long?>("NewlineLimit")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("AntiSpamRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.AutoModerationRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AntiSpamRulesId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BanTriggerId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("KickTriggerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AntiSpamRulesId");

                    b.HasIndex("BanTriggerId");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.HasIndex("KickTriggerId");

                    b.ToTable("AutoModerationRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Reprimands.Ban", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("DeleteDays")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ModeratorId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("ModeratorId", "GuildId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("Ban");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Reprimands.Kick", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ModeratorId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("ModeratorId", "GuildId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("Kick");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Reprimands.Mute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("interval");

                    b.Property<decimal>("ModeratorId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("ModeratorId", "GuildId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("Mute");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Reprimands.Warning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ModeratorId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("ModeratorId", "GuildId");

                    b.HasIndex("UserId", "GuildId");

                    b.ToTable("Warning");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Triggers.BanTrigger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("DeleteDays")
                        .HasColumnType("bigint");

                    b.Property<long>("TriggerAt")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("BanTrigger");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Triggers.KickTrigger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("TriggerAt")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("KickTrigger");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Triggers.MuteTrigger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AutoModerationRulesId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("interval");

                    b.Property<long>("TriggerAt")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AutoModerationRulesId");

                    b.ToTable("MuteTrigger");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("TextChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("VoiceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("VoiceChatRulesId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("VoiceChatRulesId");

                    b.HasIndex("OwnerId", "GuildId");

                    b.ToTable("VoiceChatLink");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("HubVoiceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("PurgeEmpty")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowJoinLeave")
                        .HasColumnType("boolean");

                    b.Property<decimal>("VoiceChannelCategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("VoiceChatCategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("VoiceChatRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.ChannelAuthorization", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Authorization.AuthorizationRule");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.HasIndex("AuthorizationRulesId");

                    b.HasDiscriminator().HasValue("ChannelAuthorization");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.GuildAuthorization", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Authorization.AuthorizationRule");

                    b.HasIndex("AuthorizationRulesId");

                    b.HasDiscriminator().HasValue("GuildAuthorization");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.PermissionAuthorization", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Authorization.AuthorizationRule");

                    b.Property<int>("Permission")
                        .HasColumnType("integer");

                    b.HasIndex("AuthorizationRulesId");

                    b.HasDiscriminator().HasValue("PermissionAuthorization");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.RoleAuthorization", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Authorization.AuthorizationRule");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasIndex("AuthorizationRulesId");

                    b.HasDiscriminator().HasValue("RoleAuthorization");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.UserAuthorization", b =>
                {
                    b.HasBaseType("HuTao.Data.Models.Authorization.AuthorizationRule");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasIndex("AuthorizationRulesId");

                    b.HasIndex("UserId", "GuildId");

                    b.HasDiscriminator().HasValue("UserAuthorization");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.AuthorizationRule", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddedBy");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.AuthorizationRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithOne("AuthorizationRules")
                        .HasForeignKey("HuTao.Data.Models.Authorization.AuthorizationRules", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildUserEntity", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Logging.LoggingRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithOne("LoggingRules")
                        .HasForeignKey("HuTao.Data.Models.Logging.LoggingRules", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.AntiSpamRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.AutoModerationRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.AntiSpamRules", "AntiSpamRules")
                        .WithMany()
                        .HasForeignKey("AntiSpamRulesId");

                    b.HasOne("HuTao.Data.Models.Moderation.Triggers.BanTrigger", "BanTrigger")
                        .WithMany()
                        .HasForeignKey("BanTriggerId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithOne("AutoModerationRules")
                        .HasForeignKey("HuTao.Data.Models.Moderation.AutoModerationRules", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Moderation.Triggers.KickTrigger", "KickTrigger")
                        .WithMany()
                        .HasForeignKey("KickTriggerId");

                    b.Navigation("AntiSpamRules");

                    b.Navigation("BanTrigger");

                    b.Navigation("Guild");

                    b.Navigation("KickTrigger");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Reprimands.Ban", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "Moderator")
                        .WithMany()
                        .HasForeignKey("ModeratorId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany("BanHistory")
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Moderator");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Reprimands.Kick", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "Moderator")
                        .WithMany()
                        .HasForeignKey("ModeratorId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany("KickHistory")
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Moderator");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Reprimands.Mute", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "Moderator")
                        .WithMany()
                        .HasForeignKey("ModeratorId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany("MuteHistory")
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Moderator");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Reprimands.Warning", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "Moderator")
                        .WithMany()
                        .HasForeignKey("ModeratorId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany("WarningHistory")
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Moderator");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.Triggers.MuteTrigger", b =>
                {
                    b.HasOne("HuTao.Data.Models.Moderation.AutoModerationRules", null)
                        .WithMany("MuteTriggers")
                        .HasForeignKey("AutoModerationRulesId");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatLink", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.VoiceChat.VoiceChatRules", null)
                        .WithMany("VoiceChats")
                        .HasForeignKey("VoiceChatRulesId");

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatRules", b =>
                {
                    b.HasOne("HuTao.Data.Models.Discord.GuildEntity", "Guild")
                        .WithOne("VoiceChatRules")
                        .HasForeignKey("HuTao.Data.Models.VoiceChat.VoiceChatRules", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.ChannelAuthorization", b =>
                {
                    b.HasOne("HuTao.Data.Models.Authorization.AuthorizationRules", "AuthorizationRules")
                        .WithMany("ChannelAuthorizations")
                        .HasForeignKey("AuthorizationRulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizationRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.GuildAuthorization", b =>
                {
                    b.HasOne("HuTao.Data.Models.Authorization.AuthorizationRules", "AuthorizationRules")
                        .WithMany("GuildAuthorizations")
                        .HasForeignKey("AuthorizationRulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizationRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.PermissionAuthorization", b =>
                {
                    b.HasOne("HuTao.Data.Models.Authorization.AuthorizationRules", "AuthorizationRules")
                        .WithMany("PermissionAuthorizations")
                        .HasForeignKey("AuthorizationRulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizationRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.RoleAuthorization", b =>
                {
                    b.HasOne("HuTao.Data.Models.Authorization.AuthorizationRules", "AuthorizationRules")
                        .WithMany("RoleAuthorizations")
                        .HasForeignKey("AuthorizationRulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizationRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.UserAuthorization", b =>
                {
                    b.HasOne("HuTao.Data.Models.Authorization.AuthorizationRules", "AuthorizationRules")
                        .WithMany("UserAuthorizations")
                        .HasForeignKey("AuthorizationRulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HuTao.Data.Models.Discord.GuildUserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizationRules");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HuTao.Data.Models.Authorization.AuthorizationRules", b =>
                {
                    b.Navigation("ChannelAuthorizations");

                    b.Navigation("GuildAuthorizations");

                    b.Navigation("PermissionAuthorizations");

                    b.Navigation("RoleAuthorizations");

                    b.Navigation("UserAuthorizations");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildEntity", b =>
                {
                    b.Navigation("AuthorizationRules");

                    b.Navigation("AutoModerationRules");

                    b.Navigation("LoggingRules");

                    b.Navigation("VoiceChatRules");
                });

            modelBuilder.Entity("HuTao.Data.Models.Discord.GuildUserEntity", b =>
                {
                    b.Navigation("BanHistory");

                    b.Navigation("KickHistory");

                    b.Navigation("MuteHistory");

                    b.Navigation("WarningHistory");
                });

            modelBuilder.Entity("HuTao.Data.Models.Moderation.AutoModerationRules", b =>
                {
                    b.Navigation("MuteTriggers");
                });

            modelBuilder.Entity("HuTao.Data.Models.VoiceChat.VoiceChatRules", b =>
                {
                    b.Navigation("VoiceChats");
                });
#pragma warning restore 612, 618
        }
    }
}